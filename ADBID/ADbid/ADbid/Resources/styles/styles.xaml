<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:Class="ADbid.Resources.styles.styles">

    <!-- Windows-->
    <!-- 기본 창 윤곽 스타일 -->
    <Style TargetType="Window" x:Key="StyWIndow">
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background"  Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>

    <!-- Button 기본 스타일-->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{x:Null}" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFEDE5D9"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <!-- Buttons-->
    <!-- 닫힘버튼 스타일 밝은버튼 -->
    <Style TargetType="{x:Type Button}" x:Key="StyBtnClose">
        <Setter Property="Width" Value="13"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="closeMainBtnImg" Source="/Resources/images/main/close.png" HorizontalAlignment="Center"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="closeMainBtnImg" Property="Source" Value="/Resources/images/main/hover/hover_close.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 닫힘버튼 스타일 어두운버튼 -->
    <Style TargetType="{x:Type Button}" x:Key="StyBtnClose2">
        <Setter Property="Width" Value="13"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="closeMainBtnImg" Source="/Resources/images/common/close2.png" HorizontalAlignment="Center"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="closeMainBtnImg" Property="Source" Value="/Resources/images/common/hover/hover_close2.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- 최소화버튼 스타일-->
    <Style TargetType="{x:Type Button}" x:Key="StyBtnMin">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="minimizeMainBtnImg" Source="/Resources/images/main/Minimize.png" HorizontalAlignment="Center"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="minimizeMainBtnImg" Property="Source" Value="/Resources/images/main/hover/hover_Minimize.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 최대화/Normal버튼 스타일-->
    <Style TargetType="{x:Type Button}" x:Key="StyBtnMax">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="maximizeMainBtnImg" Source="/Resources/images/main/Maximize.png" HorizontalAlignment="Center"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="maximizeMainBtnImg" Property="Source" Value="/Resources/images/main/hover/hover_Maximize.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Labels-->
    <!-- 타이틀 라벨 -->
    <Style TargetType="Label" x:Key="StyLblTitle">
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <!-- 본문 라벨 1 (세미 타이틀)-->
    <Style TargetType="Label" x:Key="StyLblSemiTitle">
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>

    <!-- 본문 라벨 2 (텍스트1)-->
    <Style TargetType="Label" x:Key="StyLblContent1">
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>

    <!-- 본문 라벨 3 (텍스트2)-->
    <Style TargetType="Label" x:Key="StyLblContent2">
    </Style>

    <!-- 자동입찰시작 버튼 -->
    <Style TargetType="{x:Type Button}" x:Key="StyleBtnStartAutoBid">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="startAutoBidImage" Source="/Resources/images/main/start_bidding.png"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="startAutoBidImage" Property="Source" Value="/Resources/images/main/hover/hover_start_bidding.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- 자동입찰중지 버튼 -->
    <Style TargetType="{x:Type Button}" x:Key="StyleBtnStopAutoBid">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="stopAutoBidImage" Source="/Resources/images/main/stop_bidding.png"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="stopAutoBidImage" Property="Source" Value="/Resources/images/main/hover/hover_stop_bidding.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- 상단 메인 설정버튼 -->
    <Style TargetType="{x:Type Button}" x:Key="StyleSettingBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="settingBtnImg" Source="/Resources/images/main/setting.png"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="settingBtnImg" Property="Source" Value="/Resources/images/main/hover/hover_setting.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Border 기본 스타일 지정-->
    <Style TargetType="Border" x:Key="StyTitleBar">
        <Setter Property="DockPanel.Dock" Value="Top"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Background" Value="#CBC6C2"/>
    </Style>

    <Style TargetType="Border" x:Key="StyGridBorder">
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="#FF5D5D5D"/>
        <Setter Property="BorderThickness" Value="0.3,0.6"/>
    </Style>

    <!-- TextBox 기본 스타일 지정-->
    <Style TargetType="TextBox" x:Key="StyTextBox">
        <Setter Property="DockPanel.Dock" Value="Left"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="BorderBrush" Value="#FFDEDEDE"/>
    </Style>

    <!-- CheckBox 기본 스타일 지정-->
    <Style TargetType="CheckBox" x:Key="StyChkBox">
        <Setter Property="DockPanel.Dock" Value="Left"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
    </Style>

    <!-- #### 로그인화면 #### -->
    <Style TargetType="{x:Type Button}" x:Key="StyleBtnLoginOpt">
        <!--<Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>-->
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="loginOptBtnImg" Source="/Resources/images/login/option.png" HorizontalAlignment="Center"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="loginOptBtnImg" Property="Source" Value="/Resources/images/login/hover/hover_option.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="StyleBtnLoginOpt_">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="logoutBtnImg" Source="/Resources/images/main/logout.png" HorizontalAlignment="Center"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="logoutBtnImg" Property="Source" Value="/Resources/images/main/hover/hover_logout.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBox 빨/흰 체크 스타일 지정 -->
    <Style TargetType="CheckBox" x:Key="StyRedChkBoxDefault">
        <Setter Property="DockPanel.Dock" Value="Left"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="RedChkBoxDefaultImg" Source="/Resources/images/common/l_check_box.png" HorizontalAlignment="Center"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="RedChkBoxDefaultImg" Property="Source" Value="/Resources/images/common/l_checked.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    
    
    
    
    <!-- #### 메인화면 #### -->
    <!-- 서비스 연장 버튼 스타일-->
    <Style TargetType="{x:Type Button}" x:Key="BtnAppService">
        <!--<Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>-->
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="appServiceMainBtnImg" Source="/Resources/images/main/login_extansion.png" HorizontalAlignment="Center"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="appServiceMainBtnImg" Property="Source" Value="/Resources/images/main/hover/hover_login_extansion.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 로그아웃 버튼 스타일-->
    <Style TargetType="{x:Type Button}" x:Key="StyleBtnLogout">
        <!--<Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>-->
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="logoutBtnImg" Source="/Resources/images/main/logout.png" HorizontalAlignment="Center"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="logoutBtnImg" Property="Source" Value="/Resources/images/main/hover/hover_logout.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 라벨 느낌표 -->
    <Style TargetType="Label" x:Key="StyleAutoBidStateLbl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <StackPanel Orientation="Horizontal">
                        
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 그리드 CheckBox 빨/흰 체크 스타일 지정 // 노송 -->
    <Style TargetType="{x:Type CheckBox}" x:Key="myRedCheckboxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="mainRedCheckboxImage" Source="/Resources/images/grid/un_check.png" Width="16"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="mainRedCheckboxImage" Property="Source" Value="/Resources/images/grid/checked.png"/>
                        </Trigger>
                        <!--                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="checkboxImage" Property="Source" Value="hover.png"/>
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!-- 키워드 or 재료 녹색 '중지' 뱃지 -->
    <Style TargetType="{x:Type Button}" x:Key="StyGreenStopBadge">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="mainGreenStopBadgeImg" Source="/Resources/images/grid/stop.png" Height="20" HorizontalAlignment="Center"/>
                        <ContentPresenter/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!-- 그리드 CheckBox 적색 토글버튼 스타일 지정 // 노송 -->
    <Style TargetType="{x:Type Button}" x:Key="StyRedAutoBidToggleBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="mainRedAutoBidToggleBtnImg" Source="/Resources/images/grid/on_radio.png" Height="18" HorizontalAlignment="Center"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="mainRedAutoBidToggleBtnImg" Property="Source" Value="/Resources/images/grid/on_radio.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- 그리드 CheckBox 회색 토글버튼 스타일 지정 // 노송 -->
    <Style TargetType="{x:Type Button}" x:Key="StyGrayAutoBidToggleBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="mainGrayAutoBidToggleBtnImg" Source="/Resources/images/grid/off_radio.png" Height="18" HorizontalAlignment="Center"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="mainGrayAutoBidToggleBtnImg" Property="Source" Value="/Resources/images/grid/off_radio.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- 메인 그리드 - [개별변경 버튼] -->
    <Style TargetType="{x:Type Button}" x:Key="StyBidChangeBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="gridBidChangeImg" Source="/Resources/images/grid/change_btn.png" Width="45"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="gridBidChangeImg" Property="Source" Value="/Resources/images/grid/hover/hover_change_btn.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- 메인 그리드 - [입찰로그보기 버튼] -->
    <Style TargetType="{x:Type Button}" x:Key="StyViewBidLogBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="gridViewBidLogImg" Source="/Resources/images/grid/view.png" Width="45"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="gridViewBidLogImg" Property="Source" Value="/Resources/images/grid/hover/hover_view.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- DataGrid의 하나의 Row에 대한 기본 설정(마우스 오버, 배경색, 높이 등)-->
    <Style x:Key="StyDataGridRow" TargetType="DataGridRow">
        <Setter Property="Background" Value="#FFF"/>
        <!--<Setter Property="MinHeight" Value="40" />-->
        <Setter Property="MinHeight" Value="45" />
        <Setter Property="MaxHeight" Value="45" />
        <Setter Property="Height" Value="45" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F8F8F8" />
            </Trigger>
        </Style.Triggers>
        <!--Setter Property="MinHeight" Value="50"/-->
    </Style>

    <!-- DataGrid가 활성화 되었을 때, 컨트롤들 색상바꿈(WPF) 및 비활성화 처리(C#) -->
    <Style x:Key="StyDisableDataGridRow" TargetType="DataGridRow">
        <Setter Property="Background" Value="#F8F8F8"/>
        <Setter Property="MinHeight" Value="45" />
        <Setter Property="MaxHeight" Value="45" />
        <Setter Property="Height" Value="45" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFF" />
            </Trigger>
        </Style.Triggers>
        <!--Setter Property="MinHeight" Value="50"/-->
    </Style>

    <!-- 노송 추가 2차디자인 -->
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <!--<Setter Property="BorderBrush" Value="#FFFFFFFF"/>-->
    </Style>

    <!-- DataGrid 컬럼 헤더에 크기, 마진 설정-->
    <Style x:Key="StyDataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <!--<Setter Property="Margin" Value="0,0,0,30"/> 2021-07-04 노송 수정-->
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Background" Value="White"/>
        <!--<Setter Property="BorderThickness" Value="0,1,0,1"/>-->
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="0,0,0,2"/>
    </Style>


    <!-- DataGrid 컬럼 헤더에 크기, 마진 설정-->
    <Style x:Key="StyLogDataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="0,0,0,2"/>
        <!--<Setter Property="HorizontalAlignment" Value="Left"/>-->
    </Style>



    <!-- DataGrid Cell 중 체크박스 있는 것 바인딩-->
    <DataTemplate x:Key="DTCellCheckBox">
        <Border HorizontalAlignment="Center" VerticalAlignment="Center">
            <DockPanel>
                <CheckBox IsChecked="{Binding IsSelected}"/>
            </DockPanel>
        </Border>
    </DataTemplate>

    <!-- DataGrid Cell안데 들어가는 텍스트블록에 대한 중앙설정 및 줄 자동 늘릭기-->
    <Style x:Key="StyDataGridColumnTextBlock" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!-- DataGrid Cell 중 라디오 버튼 있는 것 바인딩-->
    <!--<DataTemplate x:Key="StyDataGridColumnTextBlock">
        <Border HorizontalAlignment="Center" VerticalAlignment="Center">
            <DockPanel>
                <TextBlock Text="{Binding Keyword}"/>
                <Button Content="중지" />
            </DockPanel>
        </Border>
    </DataTemplate>-->

    <!-- DataGrid Cell 중 버튼 있는 것 바인딩-->
    <DataTemplate x:Key="DTCellButton1" >
        <Border HorizontalAlignment="Center" VerticalAlignment="Center">
            <DockPanel>
                <Button Content="{Binding AutoBidYN}"     />
            </DockPanel>
        </Border>
    </DataTemplate>

    <!-- DataGrid Cell 중 라디오 버튼 있는 것 바인딩-->
    <DataTemplate x:Key="DTCellRadioBtn">
        <Border HorizontalAlignment="Center" VerticalAlignment="Center">
            <DockPanel>
                <RadioButton Content="PC" IsChecked="{Binding IsPCYN}" Padding="2,-1,0,0" Margin="0,0,5,0"/>
                <RadioButton Content="모바일" IsChecked="{Binding IsMobileYN}" Padding="2,-1,0,0"/>
            </DockPanel>
        </Border>
    </DataTemplate>

    <!-- 빨간 라디오식 체크박스 -->
    <Style TargetType="{x:Type CheckBox}" x:Key="StyRedRoundRadioBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="mainRedRoundRadioBtn" Source="/Resources/images/main/round_radio.png" Width="20"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="mainRedRoundRadioBtn" Property="Source" Value="/Resources/images/main/round_radio_check.png"/>
                        </Trigger>
                        <!--                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="checkboxImage" Property="Source" Value="hover.png"/>
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 빨간 라디오식 체크박스 => 진짜 라디오버튼;; -->
    <Style TargetType="{x:Type RadioButton}" x:Key="StyRedRoundRadioBtn2">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="mainRedRoundRadioBtn" Source="/Resources/images/main/round_radio.png" Width="20"/>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="mainRedRoundRadioBtn" Property="Source" Value="/Resources/images/main/round_radio_check.png"/>
                        </Trigger>
                        <!--                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="checkboxImage" Property="Source" Value="hover.png"/>
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGrid Cell 중 라디오 버튼 있는 것 바인딩-->
    <DataTemplate x:Key="DTCellCheckBox2">
        <Border HorizontalAlignment="Center" VerticalAlignment="Center">
            <DockPanel>
                <!--<CheckBox Content="PC" IsChecked="{Binding IsPCYN, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Style="{StaticResource StyRedRoundRadioBtn}" Margin="0,0,10,0"/>
                <CheckBox Content="모바일" IsChecked="{Binding IsMobileYN, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Style="{StaticResource StyRedRoundRadioBtn}"/>-->
                <RadioButton Content="PC" VerticalContentAlignment="Center" Style="{StaticResource StyRedRoundRadioBtn2}" Margin="0,0,10,0" IsChecked="{Binding IsPCYN, UpdateSourceTrigger=PropertyChanged}"/>
                <RadioButton Content="모바일" VerticalContentAlignment="Center" Style="{StaticResource StyRedRoundRadioBtn2}" IsChecked="{Binding IsMobileYN, UpdateSourceTrigger=PropertyChanged}"/>
            </DockPanel>
        </Border>
    </DataTemplate>

    <!-- DataGrid Cell 중 텍스트 박스 있는 것 바인딩-->
    <DataTemplate x:Key="DTCellTextBox1">
        <Border HorizontalAlignment="Center" VerticalAlignment="Center">
            <DockPanel>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <!--<RowDefinition Height="1*"/>-->
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" >
                        <DockPanel>
                            <TextBox Name="TxtBox" MinWidth="40" MinHeight="20" MaxHeight="24" Padding="0" FontSize="12" BorderBrush="LightGray" SelectionBrush="LightGray" Background="Transparent" VerticalContentAlignment="Center"
                                 Text="{Binding TargetPCRank, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" PreviewTextInput="TextBlock_PreviewTextInput" PreviewKeyDown="Textbox_PreviewKeyDown" />
                            <Label Content=" / " Margin="-5,0,0,0" FontSize="12" />
                            <Label Content="15" Margin="-5,0,0,0" FontSize="12" />
                        </DockPanel>
                    </Grid>
                    <!--<Grid Grid.Row="0" >
                        <DockPanel>
                            <TextBox Name="TxtBox" MinWidth="30" MinHeight="20" MaxHeight="24" Padding="0" FontSize="10" BorderBrush="LightGray" SelectionBrush="LightGray" Background="Transparent" VerticalContentAlignment="Center"
                                 Text="{Binding TargetPCRank, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" PreviewTextInput="TextBlock_PreviewTextInput" PreviewKeyDown="Textbox_PreviewKeyDown" />
                            <Label Content=" / " Margin="-5,0,0,0" FontSize="10" />
                            <Label Content="15" Margin="-5,0,0,0" FontSize="10" />
                        </DockPanel>
                    </Grid>
                    <Grid Grid.Row="1" Grid.Column="0"  >
                        <DockPanel>
                            <TextBox Name="TxtBox2" MinWidth="30" MinHeight="20" MaxHeight="24" Padding="0" FontSize="10" BorderBrush="LightGray" SelectionBrush="LightGray" Background="Transparent" VerticalContentAlignment="Center"
                                 Text="{Binding TargetMobileRank, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" PreviewTextInput="TextBlock_PreviewTextInput" PreviewKeyDown="Textbox_PreviewKeyDown" />
                            <Label Content=" / " Margin="-5,0,0,0" FontSize="10" />
                            <Label Content=" 5" Margin="-5,0,0,0" FontSize="10" />
                        </DockPanel>
                    </Grid>-->
                </Grid>
            </DockPanel>
        </Border>
        <!--<DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="TxtBox" Property="BorderBrush" Value="{x:Null}"/>
            </Trigger>
        </DataTemplate.Triggers>-->
    </DataTemplate>

    <!-- DataGrid Cell 중 텍스트 박스 있는 것 바인딩 2-->
    <DataTemplate x:Key="DTCellTextBox2">
        <Border HorizontalAlignment="Center" VerticalAlignment="Center">
            <DockPanel>
                <TextBox  Name="TxtBox" BorderBrush="LightGray" MinWidth="60" Height="25" FontSize="12" Background="{x:Null}" VerticalContentAlignment="Center" SelectionBrush="LightGray" 
                          Text="{Binding MaxBid, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" PreviewTextInput="TextBlock_PreviewTextInput" PreviewKeyDown="Textbox_PreviewKeyDown"/>
                <Label Content="/ " Margin="0,0,-5,0"/>
                <Label Content="{Binding CurrentBid}" />
                <!--<Label Content=" " Margin="-5,0,0,0"/>-->
            </DockPanel>
        </Border>
        <!--<DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="TxtBox" Property="BorderBrush" Value="{x:Null}"/>
            </Trigger>
        </DataTemplate.Triggers>-->
    </DataTemplate>

    <!-- DataGrid Cell 중 텍스트 박스 있는 것 바인딩 2-->
    <DataTemplate x:Key="DTCellTextBox3">
        <Border HorizontalAlignment="Center" VerticalAlignment="Center">
            <DockPanel>
                <TextBox  Name="TxtBox" BorderBrush="LightGray" MinWidth="60" Height="25" FontSize="10" Background="{x:Null}" VerticalContentAlignment="Center" SelectionBrush="LightGray"
                          Text="{Binding AddMoney, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" PreviewTextInput="TextBlock_PreviewTextInput" PreviewKeyDown="Textbox_PreviewKeyDown"/>
            </DockPanel>
        </Border>
        <!--<DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="TxtBox" Property="BorderBrush" Value="{x:Null}"/>
            </Trigger>
        </DataTemplate.Triggers>-->
    </DataTemplate>





    <!-- 스크롤 바 시작 -->
    <Style x:Key="RepeatButtonLineUpStyle" TargetType="RepeatButton">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Width" Value="12"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="RepeatButtonLineDownStyle" TargetType="RepeatButton">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Width" Value="12"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <!--<Border x:Name="ScrollBarRectangle" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Background}" />-->
                        <Border x:Name="ScrollBarRectangle" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="#CCC" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="ScrollBarRectangle" Property="Width" Value="Auto" />
                            <Setter TargetName="ScrollBarRectangle" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Margin" Value="-14,0,0,0" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="#FF8C8C8C" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <!--<Grid x:Name="GridRoot" Width="12" Background="{TemplateBinding Background}">-->
                    <Grid x:Name="GridRoot" Width="12" Background="White">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="10"/>
                            <RowDefinition/>
                            <RowDefinition MaxHeight="10"/>
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="3"/>
                        <RepeatButton Grid.Row="0" x:Name="RbtnUp" Command="ScrollBar.LineUpCommand" Style="{StaticResource RepeatButtonLineUpStyle}">
                            <Image Source="/Resources/images/common/scrollRepeatButton.png" Width="10"/>
                        </RepeatButton>
                        <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true" Focusable="false">
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>

                            <Track.Thumb>
                                <Thumb x:Name="ScrollBarThumb" Background="{TemplateBinding Foreground}" Style="{StaticResource ScrollThumbs}" Margin="1,0,1,0"/>
                            </Track.Thumb>

                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                        <RepeatButton Grid.Row="2" x:Name="RbtnDn" Command="ScrollBar.LineDownCommand" Style="{StaticResource RepeatButtonLineDownStyle}">
                            <Image Source="/Resources/images/common/scrollRepeatButton.png" Width="10"/>
                        </RepeatButton>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ScrollBarThumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" Value="0,0,12,0" />
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="8" />
                            <Setter TargetName="ScrollBarThumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="RbtnUp" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="RbtnDn" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- 스크롤 바 마침 -->




    <!-- [입찰로그] 그리드 셀 디자인 -->

    <Style x:Key="StyLogListRow" TargetType="DataGridRow">
        <Setter Property="Background" Value="#F8F8F8"/>
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="MaxHeight" Value="40" />
        <Setter Property="Height" Value="40" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#EEE"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="StyLogListCell" TargetType="DataGridCell">
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>






    <!-- 스크롤 바 관련 참고 할 내용 -->
    <!--<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Style.Resources>

            <ControlTemplate x:Key="verRepeat" TargetType="RepeatButton">
                <Border CornerRadius="0" BorderBrush="Gray" BorderThickness="0" Background="Transparent">
                    <Image Source="C:\Users\E1-10990K-4\workspace\adbid_winapp\ADbid\ADbid\Resources\images\common\scrollRepeatButton.png" Width="10"/>
                </Border>
            </ControlTemplate>

            <ControlTemplate x:Key="midRepeat" TargetType="RepeatButton">
                <Border Background="Transparent">
                    <ContentPresenter/>
                </Border>
            </ControlTemplate>

            <ControlTemplate x:Key="verScroll" TargetType="ScrollBar">
                <Grid Margin="0,0,0,0" Background="White">
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="10"/>
                        <RowDefinition/>
                        <RowDefinition MaxHeight="10"/>
                    </Grid.RowDefinitions>
                    <Border Grid.RowSpan="3"/>
                    <RepeatButton Grid.Row="0" Command="ScrollBar.LineUpCommand" Template="{StaticResource verRepeat}"/>
                    <Track x:Name="PART_Track_h" Grid.Row="1" IsDirectionReversed="false">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageUpCommand" Template="{StaticResource midRepeat}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Margin="1,0,1,0" Width="Auto" Height="Auto">
                                <Thumb.Template>
                                    <ControlTemplate TargetType="Thumb">
                                        <Border Background="#CCC" CornerRadius="5"/>
                                    </ControlTemplate>
                                </Thumb.Template>
                            </Thumb>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageDownCommand" Template="{StaticResource midRepeat}"/>
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Row="2" Command="ScrollBar.LineDownCommand" Template="{StaticResource verRepeat}"/>
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="horScroll" TargetType="ScrollBar">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="18"/>
                        <ColumnDefinition Width="0.00001*"/>
                        <ColumnDefinition MaxWidth="18"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="3"/>
                    <RepeatButton Grid.Column="0" Height="18" Command="ScrollBar.LineLeftCommand" Template="{StaticResource verRepeat}"/>
                    <Track x:Name="PART_Track_v" Grid.Column="1" IsDirectionReversed="False" Focusable="False">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageLeftCommand" Template="{StaticResource midRepeat}">

                            </RepeatButton>
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb>
                                <Thumb.Template>
                                    <ControlTemplate TargetType="Thumb">
                                        <Grid>
                                            <Border Background="Green" Margin="0,1,0,1"/>
                                            <ContentPresenter Width="18" Height="18"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Thumb.Template>
                            </Thumb>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageRightCommand" Template="{StaticResource midRepeat}"/>
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Column="2" Command="ScrollBar.LineRightCommand" Template="{StaticResource verRepeat}"/>
                </Grid>
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource horScroll}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource verScroll}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->







    <!-- 환경설정 인증버튼 -->
    <Style x:Key="WinSetting_BtnAuth1" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StySettingCertifiedBtn" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#ee4036"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Content" Value="인증"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="#ee4036" BorderThickness="1" CornerRadius="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#DA3228"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    
    
    
    
    
</ResourceDictionary>